@model VigilanceClearance.Models.PESB.PESBViewModel

@{
    Layout = "~/Views/Shared/_PESBLayout.cshtml";
    var username = Context.Session.GetString("Username");
}

<!-- Flatpickr CSS -->
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/flatpickr/dist/flatpickr.min.css">

<!-- Flatpickr JS -->
<script src="https://cdn.jsdelivr.net/npm/flatpickr"></script>


<div class="row justify-content-center mt-4">
    <div class="col-md-10">
        <div class="card shadow border-0 rounded-4">
            <div class="card-header bg-primary text-white">
                <h4 class="mb-0">Add New Reference</h4>
            </div>

            <div class="card-body">
                <form asp-action="new_reference">
                    <div asp-validation-summary="ModelOnly" class="text-danger mb-3"></div>

                    <div class="row">
                        <div class="form-group col-md-6">
                            <label asp-for="new_reference.referenceReceivedFor" class="control-label"></label>
                            @Html.DropDownListFor(model => model.new_reference.referenceReceivedFor,
                            Model.reference_received_for_ddl_List,
                            "-- Select Reference --",
                            new { @class = "form-control", id = "referenceReceivedFor", disabled = "disabled" })
                            @Html.HiddenFor(model => model.new_reference.referenceReceivedFor)
                            <span asp-validation-for="new_reference.referenceReceivedFor" class="text-danger"></span>
                        </div>

                        <div class="form-group col-md-6">
                            <label asp-for="new_reference.selectionForThePostCategory" class="control-label"></label>
                            @Html.DropDownListFor(model => model.new_reference.selectionForThePostCategory,
                            Model.post_ddl_List,
                            "-- Select Post --",
                            new { @class = "form-control", id = "selectionForThePostCategory" })
                            <span asp-validation-for="new_reference.selectionForThePostCategory" class="text-danger"></span>
                        </div>
                    </div>


                    <div class="row">
                        <div class="form-group col-md-6">
                            <label asp-for="new_reference.selectionForThePostSubCategory" class="control-label"></label>
                            @Html.DropDownListFor(model => model.new_reference.selectionForThePostSubCategory,
                            Model.sub_post_ddl_List,
                            "-- Select Sub Post --",
                            new { @class = "form-control", id = "selectionForThePostSubCategory", tabindex = "-1" , disabled = "disabled"})
                            <span asp-validation-for="new_reference.selectionForThePostSubCategory" class="text-danger"></span>
                        </div>

                        <div class="form-group col-md-6">
                            <label asp-for="new_reference.orgCode" class="control-label"></label>
                            @Html.DropDownListFor(model => model.new_reference.orgCode, Model.organization_ddl_List, "-- Select Organization --",
                            new { @class = "form-control", id = "orgCode", tabindex = "-1" })
                            <span asp-validation-for="new_reference.orgCode" class="text-danger"></span>
                        </div>
                    </div>

                    <div class="row">
                        <div class="form-group col-md-6">
                            <label asp-for="new_reference.minCode" class="control-label"></label>
                            @Html.DropDownListFor(model => model.new_reference.minCode, Model.ministry_ddl_List, "-- Select Ministry --",
                            new { @class = "form-control", id = "minCode", tabindex = "-1", disabled = "disabled"})
                            <span asp-validation-for="new_reference.minCode" class="text-danger"></span>
                        </div>

                        <div class="form-group col-md-6">
                            <label asp-for="new_reference.referenceNoFileNo" class="control-label"></label>
                            <input asp-for="new_reference.referenceNoFileNo" class="form-control" placeholder="File No." />
                            <span asp-validation-for="new_reference.referenceNoFileNo" class="text-danger"></span>
                        </div>
                    </div>

                    <div class="row">
                        <div class="form-group col-md-6">
                            <label asp-for="new_reference.referenceOrSubmissionToCvcDate" class="control-label"></label>
                            <input asp-for="new_reference.referenceOrSubmissionToCvcDate" class="form-control datepicker" placeholder="yyyy-mm-dd" />
                            <span asp-validation-for="new_reference.referenceOrSubmissionToCvcDate" class="text-danger"></span>
                        </div>

                        <div class="form-group col-md-6">
                            <label asp-for="new_reference.cvcReferenceIdFileNo" class="control-label"></label>
                            <input asp-for="new_reference.cvcReferenceIdFileNo" class="form-control" placeholder="CVC Reference ID / File No." />
                            <span asp-validation-for="new_reference.cvcReferenceIdFileNo" class="text-danger"></span>
                        </div>
                    </div>

                    <div class="form-group mt-4">
                        <div class="d-flex justify-content-end">
                            <button type="button" class="btn btn-success me-2" id="btnSaveNewReference" onclick="SaveNewReference()">Submit</button>
                            <a asp-action="PESB_Appointment" asp-controller="PESB" class="btn btn-primary">Go to Details</a>
                        </div>
                    </div>

                </form>
            </div>
        </div>
    </div>
</div>


<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/flatpickr"></script>
<script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.bundle.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/popper.js@1.16.1/dist/umd/popper.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>


@* Post and SubPost Script *@
<script>
    $(document).ready(function () {

        // Function to toggle visibility of "Other Sub Post" field
        function toggleOtherField() {
            var subPostVal = $('#selectionForThePostSubCategory').val();  // Make sure to use the correct ID for SubPost dropdown
            if (subPostVal === 'Other') {
                $('#OtherSubPostDiv').show();  // Show the "Other Sub Post" field
            } else {
                $('#OtherSubPostDiv').hide();  // Hide the "Other Sub Post" field
                $('#OtherSubPost').val('');  // Clear the input field when hidden
            }
        }

        // Event listener for when Post Category is changed (dropdown selection)
        $('#selectionForThePostCategory').change(function () {
            var selectedPost = $(this).val();  // Get selected Post Category value
            var subPostSelect = $('#selectionForThePostSubCategory');  // Get the Sub Post dropdown element

            // Clear subpost dropdown and reset values
            subPostSelect.empty();
            subPostSelect.prop('disabled', true);  // Disable the Sub Post dropdown initially
            // subPostSelect.append($('<option>').val('').text('-- Select Sub Post --'));  // Add a default "Select Sub Post" option

            $('#OtherSubPostDiv').hide();  // Hide the "Other Sub Post" field
            $('#OtherSubPost').val('');  // Clear "other" input field if hidden

            if (!selectedPost) {
                return;  // Exit if no Post Category is selected
            }

            // Make AJAX request to get sub-posts based on selected Post Category
            $.ajax({
                url: '@Url.Action("GetSubPostsByPostCode", "PESB")',  // URL for getting sub-posts
                type: 'GET',
                data: { postCode: selectedPost },  // Pass selected Post Category code
                dataType: "json",
                success: function (data) {
                    if (!data || data.length === 0) {
                        // If no sub-posts available, disable dropdown and show a message
                        subPostSelect.append($('<option>').val('').text('-- No Sub Posts Available --'));
                        subPostSelect.prop('disabled', true);
                        $('#OtherSubPostDiv').hide();  // Hide "Other" field
                    } else {
                        // Populate the sub-post dropdown with available sub-posts
                        subPostSelect.append($('<option>').val('').text('-- Select Sub Post --'));  // Default option
                        $.each(data, function (i, item) {
                            subPostSelect.append($('<option>').val(item.value).text(item.text));  // Add each sub-post
                        });
                        subPostSelect.prop('disabled', false);  // Enable the dropdown

                        toggleOtherField();  // Check if the "Other" option needs to be shown
                    }
                },
                error: function (xhr) {
                    alert("Error loading sub posts: " + xhr.statusText);  // Handle AJAX errors
                }
            });
        });

        // Event listener for when Sub Post Category is changed (dropdown selection)
        $('#selectionForThePostSubCategory').change(toggleOtherField);  // Check if "Other" field should be shown

        // On page load, check if "Other" sub post should be shown
        toggleOtherField();

    });
</script>

@* date picker *@
<script>
    $(document).ready(function () {
        flatpickr(".datepicker", {
            dateFormat: "Y-m-d",
            allowInput: false
        });
    });
</script>

@* Org and Ministry Script *@
<script>
    $(document).ready(function () {
        $('#orgCode').change(function () {
            var orgCode = $(this).val();
            var ministryDropdown = $('#minCode');

            // Clear the ministry dropdown
            ministryDropdown.empty();

            // Disable dropdown and set default option if no organization is selected
            if (!orgCode) {
                ministryDropdown.prop('disabled', true)
                    .append($('<option>').val('').text('-- Select Ministry --'));
                return;
            }

            console.log("Sending AJAX for orgCode: " + orgCode); // Debug log for selected organization code

            // Send AJAX request to fetch ministries by organization code
            $.ajax({
                url: '@Url.Action("GetMinistryByOrgCode", "PESB")', // Adjust the controller/action as necessary
                type: 'GET',
                data: { id: orgCode }, // Pass organization code to server
                dataType: "json",
                success: function (data) {
                    ministryDropdown.empty(); // Clear current options

                    // Check if no data or invalid data
                    if (!data || data.length === 0 || (data.length === 1 && !data[0].Value && !data[0].value)) {
                        ministryDropdown.prop('disabled', true)
                            .append($('<option>').val('').text('-- No Ministry Available --'));
                        return;
                    }

                    // Add default "Select Ministry" option
                    // ministryDropdown.append($('<option>').val('').text('-- Select Ministry --'));

                    // Populate the ministry dropdown with received data
                    $.each(data, function (i, item) {
                        var val = item.Value || item.value; // Check both possible key names
                        var txt = item.Text || item.text;   // Check both possible key names
                        ministryDropdown.append($('<option>').val(val).text(txt));
                    });

                    // Enable dropdown after options are added
                    ministryDropdown.prop('disabled', false);
                },
                error: function (xhr) {
                    alert("Error loading ministries: " + xhr.statusText); // Display error on failure
                }
            });
        });
    });

</script>

@* Save New Reference Data *@
<script>
    function SaveNewReference() {
        const referenceReceivedFor = $("#referenceReceivedFor").val();
        const selectionForThePostCategory = $("#selectionForThePostCategory").val();
        const selectionForThePostSubCategory = $("#selectionForThePostSubCategory").val();
        const orgCode = $("#orgCode").val();
        const minCode = $("#minCode").val();
        const referenceNoFileNo = $("#new_reference_referenceNoFileNo").val().trim();
        const referenceDate = $("#new_reference_referenceOrSubmissionToCvcDate").val().trim();
        const cvcReferenceIdFileNo = $("#new_reference_cvcReferenceIdFileNo").val().trim();

        let isValid = true;

        // Clear existing errors
        $(".text-danger").text("");

        // Simple Validation
        if (selectionForThePostCategory === "") {
            $("#selectionForThePostCategory").next(".text-danger").text("Please select Post Category.");
            isValid = false;
        }
        if (orgCode === "") {
            $("#orgCode").next(".text-danger").text("Please select Organization.");
            isValid = false;
        }
        if (referenceNoFileNo === "") {
            $("#new_reference_referenceNoFileNo").next(".text-danger").text("Please enter File No.");
            isValid = false;
        }
        if (referenceDate === "") {
            $("#new_reference_referenceOrSubmissionToCvcDate").next(".text-danger").text("Please enter Reference Date.");
            isValid = false;
        }
        if (cvcReferenceIdFileNo === "") {
            $("#new_reference_cvcReferenceIdFileNo").next(".text-danger").text("Please enter Reference File No..");
            isValid = false;
        }

        if (!isValid) return;

        Swal.fire({
            title: "Confirm Submission",
            text: "Do you want to save this reference?",
            icon: "question",
            showCancelButton: true,
            confirmButtonText: "Yes, Save",
            cancelButtonText: "Cancel"
        }).then((result) => {
            if (result.isConfirmed) {
                $('#btnSaveNewReference').prop('disabled', true).text("Submitting...");

                $.ajax({
                    type: "POST",
                    url: "/PESB/new_reference",
                    data: {
                        new_reference: {
                            referenceReceivedFor,
                            selectionForThePostCategory,
                            selectionForThePostSubCategory,
                            orgCode,
                            minCode,
                            referenceNoFileNo,
                            referenceOrSubmissionToCvcDate: referenceDate,
                            cvcReferenceIdFileNo
                        }
                    },
                    success: function (response) {
                        if (response.success) {
                            Swal.fire({
                                icon: "success",
                                title: "Saved successfully!",
                                confirmButtonColor: '#3085d6'
                            }).then(() => {
                                window.location.reload();
                            });
                        } else {
                            Swal.fire({
                                icon: "error",
                                title: "Failed to Save",
                                text: response.message || "An error occurred."
                            });
                        }
                    },
                    error: function () {
                        Swal.fire({
                            icon: "error",
                            title: "Oops!",
                            text: "Something went wrong. Please try again."
                        });
                    },
                    complete: function () {
                        $('#btnSaveNewReference').prop('disabled', false).text("Submit");
                    }
                });
            }
        });
    }
</script>



